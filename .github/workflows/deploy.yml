name: Deploy to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      # Set defaults; you can also define these in Repository > Settings > Variables
      DEPLOY_PATH: ${{ vars.DEPLOY_PATH || '/srv/dvwa' }}
      POST_DEPLOY_CMD: ${{ vars.POST_DEPLOY_CMD || '' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rsync & ssh client
        run: |
          sudo apt-get update
          sudo apt-get install -y rsync openssh-client sshpass

      - name: Configure SSH
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
        run: |
          install -m 700 -d ~/.ssh
          # Disable StrictHostKeyChecking for password auth
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile=/dev/null" >> ~/.ssh/config
          echo "  PasswordAuthentication yes" >> ~/.ssh/config
          chmod 600 ~/.ssh/config
          # Preload host key
          ssh-keyscan -p "${VPS_PORT:-22}" "$VPS_HOST" >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: Ensure remote dir & rsync present
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
          DEPLOY_PATH: ${{ env.DEPLOY_PATH }}
        run: |
          sshpass -p "$VPS_PASSWORD" ssh -p "${VPS_PORT:-22}" "$VPS_USER@$VPS_HOST" "\
            mkdir -p '$DEPLOY_PATH' && \
            ( command -v rsync >/dev/null 2>&1 || \
              (sudo apt-get update && sudo apt-get install -y rsync) || \
              (which yum >/dev/null 2>&1 && sudo yum install -y rsync) || \
              true )"

      - name: Deploy with rsync
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
          DEPLOY_PATH: ${{ env.DEPLOY_PATH }}
        run: |
          rsync -az --delete \
            --exclude '.git' \
            --exclude '.github' \
            -e "sshpass -p '$VPS_PASSWORD' ssh -p ${VPS_PORT:-22}" \
            ./ "$VPS_USER@$VPS_HOST:$DEPLOY_PATH/"

      - name: Post-deploy (optional)
        if: always()  # runs, but does nothing if POST_DEPLOY_CMD is empty
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PORT: ${{ secrets.VPS_PORT }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_PASSWORD: ${{ secrets.VPS_PASSWORD }}
          POST_DEPLOY_CMD: ${{ env.POST_DEPLOY_CMD }}
        run: |
          if [ -n "${POST_DEPLOY_CMD:-}" ]; then
            echo "Running post-deploy command: $POST_DEPLOY_CMD"
            sshpass -p "$VPS_PASSWORD" ssh -p "${VPS_PORT:-22}" "$VPS_USER@$VPS_HOST" "$POST_DEPLOY_CMD"
          else
            echo "No POST_DEPLOY_CMD set; skipping."
          fi
